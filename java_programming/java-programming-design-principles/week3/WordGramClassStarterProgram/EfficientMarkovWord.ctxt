#BlueJ class context
comment0.target=EfficientMarkovWord
comment1.params=order
comment1.target=EfficientMarkovWord(int)
comment2.params=seed
comment2.target=void\ setRandom(int)
comment3.params=text
comment3.target=void\ setTraining(java.lang.String)
comment4.params=numWords
comment4.target=java.lang.String\ getRandomText(int)
comment5.params=
comment5.target=void\ buildMap()
comment5.text=\ \ \ \ public\ void\ buildMap(){\r\n\ \ \ \ \ \ \ \ String[]\ tempWords\ \=\ new\ String[myOrder];\r\n\ \ \ \ \ \ \ \ for(int\ x\ \=\ 0;\ x+myOrder\ <\=\ myText.length;\ x++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.arraycopy(myText,\ x,\ tempWords,\ 0,\ myOrder);\r\n\ \ \ \ \ \ \ \ \ \ \ \ //for(int\ k\=0;k<myOrder;k++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ //\ \ \ \ tempWords[k]\ \=\ myText[x+k];\r\n\ \ \ \ \ \ \ \ \ \ \ \ //}\r\n\ \ \ \ \ \ \ \ \ \ \ \ WordGram\ kGram\ \=\ new\ WordGram(tempWords,\ 0,\ tempWords.length);\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (\!map.containsKey(kGram)){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ArrayList<String>\ follows\ \=\ new\ ArrayList<String>();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ pos\ \=\ 0;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ while\ (pos\ <\ myText.length){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ start\ \=\ indexOf(myText,kGram,pos);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (start\ \=\=\ -1){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (start\ +\ kGram.length()\ >\ myText.length-1){\ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ String\ next\ \=\ myText[start+kGram.length()];\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ follows.add(next);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ pos\ \=\ start+kGram.length();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ map.put(kGram,\ follows);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n}
comment6.params=key
comment6.target=java.util.ArrayList\ getFollows(WordGram)
comment7.params=
comment7.target=void\ printHashMapInfo()
comment8.params=words\ target\ start
comment8.target=int\ indexOf(java.lang.String[],\ WordGram,\ int)
numComments=9
